"use strict";Object.defineProperty(exports,"__esModule",{value:true});
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function __awaiter(e,t,n,r){function o(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r["throw"](e))}catch(e){i(e)}}function c(e){e.done?n(e.value):o(e.value).then(a,s)}c((r=r.apply(e,t||[])).next())}))}var MessageType;(function(e){e["Call"]="call";e["Reply"]="reply";e["Syn"]="syn";e["SynAck"]="synAck";e["Ack"]="ack"})(MessageType||(MessageType={}));var Resolution;(function(e){e["Fulfilled"]="fulfilled";e["Rejected"]="rejected"})(Resolution||(Resolution={}));var ErrorCode;(function(e){e["ConnectionDestroyed"]="ConnectionDestroyed";e["ConnectionTimeout"]="ConnectionTimeout";e["NoIframeSrc"]="NoIframeSrc"})(ErrorCode||(ErrorCode={}));var NativeErrorName;(function(e){e["DataCloneError"]="DataCloneError"})(NativeErrorName||(NativeErrorName={}));var NativeEventType;(function(e){e["Message"]="message"})(NativeEventType||(NativeEventType={}));var createDestructor=(e,t)=>{const n=[];let r=false;return{destroy(o){if(!r){r=true;t(`${e}: Destroying connection`);n.forEach((e=>{e(o)}))}},onDestroy(e){r?e():n.push(e)}}};var createLogger=e=>(...t)=>{if(e){console.log("[Penpal]",...t)}};const DEFAULT_PORT_BY_PROTOCOL={"http:":"80","https:":"443"};const URL_REGEX=/^(https?:)?\/\/([^/:]+)?(:(\d+))?/;const opaqueOriginSchemes=["file:","data:"];var getOriginFromSrc=e=>{if(e&&opaqueOriginSchemes.find((t=>e.startsWith(t)))){return"null"}const t=document.location;const n=URL_REGEX.exec(e);let r;let o;let i;if(n){r=n[1]?n[1]:t.protocol;o=n[2];i=n[4]}else{r=t.protocol;o=t.hostname;i=t.port}const a=i&&i!==DEFAULT_PORT_BY_PROTOCOL[r]?`:${i}`:"";return`${r}//${o}${a}`};const serializeError=({name:e,message:t,stack:n})=>({name:e,message:t,stack:n});const deserializeError=e=>{const t=new Error;Object.keys(e).forEach((n=>t[n]=e[n]));return t};var connectCallReceiver=(e,t,n)=>{const{localName:r,local:o,remote:i,originForSending:a,originForReceiving:s}=e;let c=false;const d=e=>{if(e.source!==i||e.data.penpal!==MessageType.Call){return}if(s!=="*"&&e.origin!==s){n(`${r} received message from origin ${e.origin} which did not match expected origin ${s}`);return}const o=e.data;const{methodName:d,args:l,id:u}=o;n(`${r}: Received ${d}() call`);const g=e=>t=>{n(`${r}: Sending ${d}() reply`);if(c){n(`${r}: Unable to send ${d}() reply due to destroyed connection`);return}const o={penpal:MessageType.Reply,id:u,resolution:e,returnValue:t};if(e===Resolution.Rejected&&t instanceof Error){o.returnValue=serializeError(t);o.returnValueIsError=true}try{i.postMessage(o,a)}catch(e){if(e.name===NativeErrorName.DataCloneError){const t={penpal:MessageType.Reply,id:u,resolution:Resolution.Rejected,returnValue:serializeError(e),returnValueIsError:true};i.postMessage(t,a)}throw e}};new Promise((e=>e(t[d].apply(t,l)))).then(g(Resolution.Fulfilled),g(Resolution.Rejected))};o.addEventListener(NativeEventType.Message,d);return()=>{c=true;o.removeEventListener(NativeEventType.Message,d)}};let id=0;var generateId=()=>++id;const KEY_PATH_DELIMITER=".";const keyPathToSegments=e=>e?e.split(KEY_PATH_DELIMITER):[];const segmentsToKeyPath=e=>e.join(KEY_PATH_DELIMITER);const createKeyPath=(e,t)=>{const n=keyPathToSegments(t||"");n.push(e);return segmentsToKeyPath(n)};const setAtKeyPath=(e,t,n)=>{const r=keyPathToSegments(t);r.reduce(((e,t,o)=>{if(typeof e[t]==="undefined"){e[t]={}}if(o===r.length-1){e[t]=n}return e[t]}),e);return e};const serializeMethods=(e,t)=>{const n={};Object.keys(e).forEach((r=>{const o=e[r];const i=createKeyPath(r,t);if(typeof o==="object"){Object.assign(n,serializeMethods(o,i))}if(typeof o==="function"){n[i]=o}}));return n};const deserializeMethods=e=>{const t={};for(const n in e){setAtKeyPath(t,n,e[n])}return t};var connectCallSender=(e,t,n,r,o)=>{const{localName:i,local:a,remote:s,originForSending:c,originForReceiving:d}=t;let l=false;o(`${i}: Connecting call sender`);const u=e=>(...t)=>{o(`${i}: Sending ${e}() call`);let n;try{if(s.closed){n=true}}catch(e){n=true}if(n){r()}if(l){const t=new Error(`Unable to send ${e}() call due `+`to destroyed connection`);t.code=ErrorCode.ConnectionDestroyed;throw t}return new Promise(((n,r)=>{const l=generateId();const u=t=>{if(t.source!==s||t.data.penpal!==MessageType.Reply||t.data.id!==l){return}if(d!=="*"&&t.origin!==d){o(`${i} received message from origin ${t.origin} which did not match expected origin ${d}`);return}const c=t.data;o(`${i}: Received ${e}() reply`);a.removeEventListener(NativeEventType.Message,u);let g=c.returnValue;if(c.returnValueIsError){g=deserializeError(g)}(c.resolution===Resolution.Fulfilled?n:r)(g)};a.addEventListener(NativeEventType.Message,u);const g={penpal:MessageType.Call,id:l,methodName:e,args:t};s.postMessage(g,c)}))};const g=n.reduce(((e,t)=>{e[t]=u(t);return e}),{});Object.assign(e,deserializeMethods(g));return()=>{l=true}};var handleAckMessageFactory=(e,t,n,r,o)=>{const{destroy:i,onDestroy:a}=r;let s;let c;const d={};return r=>{if(t!=="*"&&r.origin!==t){o(`Parent: Handshake - Received ACK message from origin ${r.origin} which did not match expected origin ${t}`);return}o("Parent: Handshake - Received ACK");const l={localName:"Parent",local:window,remote:r.source,originForSending:n,originForReceiving:t};if(s){s()}s=connectCallReceiver(l,e,o);a(s);if(c){c.forEach((e=>{delete d[e]}))}c=r.data.methodNames;const u=connectCallSender(d,l,c,i,o);a(u);return d}};var handleSynMessageFactory=(e,t,n,r)=>o=>{if(n!=="*"&&o.origin!==n){e(`Parent: Handshake - Received SYN message from origin ${o.origin} which did not match expected origin ${n}`);return}e("Parent: Handshake - Received SYN, responding with SYN-ACK");const i={penpal:MessageType.SynAck,methodNames:Object.keys(t)};o.source.postMessage(i,r)};const CHECK_IFRAME_IN_DOC_INTERVAL=6e4;var monitorIframeRemoval=(e,t)=>{const{destroy:n,onDestroy:r}=t;const o=setInterval((()=>{if(!e.isConnected){clearInterval(o);n()}}),CHECK_IFRAME_IN_DOC_INTERVAL);r((()=>{clearInterval(o)}))};var startConnectionTimeout=(e,t)=>{let n;if(e!==undefined){n=window.setTimeout((()=>{const n=new Error(`Connection timed out after ${e}ms`);n.code=ErrorCode.ConnectionTimeout;t(n)}),e)}return()=>{clearTimeout(n)}};var validateIframeHasSrcOrSrcDoc=e=>{if(!e.src&&!e.srcdoc){const e=new Error("Iframe must have src or srcdoc property defined.");e.code=ErrorCode.NoIframeSrc;throw e}};var connectToChild=e=>{let{iframe:t,methods:n={},childOrigin:r,timeout:o,debug:i=false}=e;const a=createLogger(i);const s=createDestructor("Parent",a);const{onDestroy:c,destroy:d}=s;if(!r){validateIframeHasSrcOrSrcDoc(t);r=getOriginFromSrc(t.src)}const l=r==="null"?"*":r;const u=serializeMethods(n);const g=handleSynMessageFactory(a,u,r,l);const m=handleAckMessageFactory(u,r,l,s,a);const f=new Promise(((e,n)=>{const r=startConnectionTimeout(o,d);const i=n=>{if(n.source!==t.contentWindow||!n.data){return}if(n.data.penpal===MessageType.Syn){g(n);return}if(n.data.penpal===MessageType.Ack){const t=m(n);if(t){r();e(t)}return}};window.addEventListener(NativeEventType.Message,i);a("Parent: Awaiting handshake");monitorIframeRemoval(t,s);c((e=>{window.removeEventListener(NativeEventType.Message,i);if(e){n(e)}}))}));return{promise:f,destroy(){d()}}};const createIframe=(e,t,n="")=>{const r=e.websiteContainerId||"cloudadmin-container";const o=document.getElementById(r);let i=document.getElementById("cloudadmin");if(!i){i=document.createElement("iframe");o===null||o===void 0?void 0:o.appendChild(i);i.id="cloudadmin";i.width="100%";i.height="100%";i.setAttribute("style","border: 0")}const a=e.landingPage?`&return_to=${e.landingPage}`:"";const s=n?`&tenant=${n}`:"";i.src=`${e.cloudAdminWebsiteUrl}/gateway/partner?use_pm=1&access_token=${t}${a}${s}`;return i};const connectIframe=(e,t)=>__awaiter(void 0,void 0,void 0,(function*(){const n=connectToChild({debug:e.debugMode,iframe:t});return yield n.promise}));const CloudAdminWebsite=e=>{let t;const n=(n,r="")=>__awaiter(void 0,void 0,void 0,(function*(){const o=createIframe(e,n,r);t=yield connectIframe(e,o)}));const r=()=>__awaiter(void 0,void 0,void 0,(function*(){return yield t.getAvailablePages(e.partner)}));const o=e=>__awaiter(void 0,void 0,void 0,(function*(){yield t.setRoute(e)}));return{createWebsite:n,getAvailablePages:r,setRoute:o}};exports.CloudAdminWebsite=CloudAdminWebsite;